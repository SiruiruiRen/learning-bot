/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fsirui%2FDesktop%2Fmybot%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsirui%2FDesktop%2Fmybot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fsirui%2FDesktop%2Fmybot%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsirui%2FDesktop%2Fmybot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_sirui_Desktop_mybot_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/chat/route.ts */ \"(rsc)/./app/api/chat/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    resolvedPagePath: \"/Users/sirui/Desktop/mybot/app/api/chat/route.ts\",\n    nextConfigOutput,\n    userland: _Users_sirui_Desktop_mybot_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNpcnVpJTJGRGVza3RvcCUyRm15Ym90JTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnNpcnVpJTJGRGVza3RvcCUyRm15Ym90JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUNBO0FBQzdFO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc2lydWkvRGVza3RvcC9teWJvdC9hcHAvYXBpL2NoYXQvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NoYXQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jaGF0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3NpcnVpL0Rlc2t0b3AvbXlib3QvYXBwL2FwaS9jaGF0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fsirui%2FDesktop%2Fmybot%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsirui%2FDesktop%2Fmybot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./app/api/chat/route.ts":
/*!*******************************!*\
  !*** ./app/api/chat/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\n// Initialize Supabase client\nconst supabaseUrl = \"https://xuscdqhwztntycrtrdbl.supabase.co\";\nconst supabaseKey = process.env.SUPABASE_SERVICE_KEY;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseKey);\n// Maximum number of retries for backend API calls\nconst MAX_RETRIES = 2;\nconst RETRY_DELAY = 1000; // 1 second\n// Helper function for retrying API calls\nasync function fetchWithRetry(url, options, retries = MAX_RETRIES) {\n    try {\n        return await fetch(url, options);\n    } catch (error) {\n        if (retries > 0) {\n            console.log(`Retrying API call, ${retries} retries left`);\n            await new Promise((resolve)=>setTimeout(resolve, RETRY_DELAY));\n            return fetchWithRetry(url, options, retries - 1);\n        }\n        throw error;\n    }\n}\nasync function POST(request) {\n    try {\n        const data = await request.json();\n        const { userId, phase, component, message, conversationId } = data;\n        if (!userId || !phase || !message) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'userId, phase, and message are required'\n            }, {\n                status: 400\n            });\n        }\n        // Log the request for debugging\n        console.log(`Processing request: phase=${phase}, component=${component}, userId=${userId.slice(0, 8)}...`);\n        console.log(`Message: \"${message.substring(0, 30)}${message.length > 30 ? '...' : ''}\"`);\n        // For phase1, we'll handle it on the client side with predefined responses\n        if (phase === 'phase1') {\n            console.log('Using client-side handling for phase1');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                data: {\n                    message: \"This is handled on the client side for phase1\",\n                    phase: phase,\n                    component: component\n                }\n            });\n        }\n        // Map frontend phase name to backend agent if needed\n        let backendPhase = phase;\n        if (phase === 'intro') {\n            backendPhase = 'intro'; // 'intro' page uses intro agent\n        } else if (phase === 'summary') {\n            backendPhase = 'summary'; // 'summary' page uses the summary agent\n        }\n        // Backend API URL\n        const backendUrl = process.env.BACKEND_API_URL || 'http://localhost:8081';\n        console.log(`Connecting to backend API at ${backendUrl}/api/chat (Updated: ${new Date().toISOString()})`);\n        try {\n            // Set a reasonable timeout for the request\n            const controller = new AbortController();\n            const timeoutId = setTimeout(()=>controller.abort(), 20000); // 20 second timeout\n            // Prepare the request body\n            const requestBody = {\n                user_id: userId,\n                phase: backendPhase,\n                message: message,\n                conversation_id: conversationId,\n                raw_message: message,\n                component: component\n            };\n            console.log('Sending request to backend:', JSON.stringify(requestBody));\n            // Always try to connect to the backend API without complex fallbacks\n            console.log('Connecting to backend at:', `${backendUrl}/api/chat`);\n            let response;\n            try {\n                response = await fetchWithRetry(`${backendUrl}/api/chat`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(requestBody),\n                    signal: controller.signal\n                });\n                console.log(`Backend response status: ${response.status}`);\n                if (!response.ok) {\n                    let errorDetails = '';\n                    try {\n                        errorDetails = await response.text();\n                        console.error(`Backend API error: ${response.status} - ${errorDetails}`);\n                    } catch (textError) {\n                        console.error(`Error reading response text: ${textError}`);\n                    }\n                    if (response.status === 404) {\n                        console.log('Endpoint not found, providing fallback response');\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            success: true,\n                            data: {\n                                message: \"I'm sorry, but that resource is not available yet. Let's continue with what we have.\",\n                                phase: phase,\n                                component: component,\n                                agent_type: \"fallback\",\n                                scaffolding_level: 2,\n                                timestamp: new Date().toISOString()\n                            }\n                        });\n                    }\n                    throw new Error(`Backend API error: ${response.status}`);\n                }\n                // Parse the JSON response\n                let responseData;\n                let formattedData;\n                try {\n                    responseData = await response.json();\n                    console.log('Successfully parsed response JSON');\n                    console.log('Raw response data:', JSON.stringify(responseData));\n                    // Validate the response data\n                    if (!responseData) {\n                        console.error('Empty response from backend');\n                        throw new Error('Empty response from backend');\n                    }\n                    // Handle different response formats\n                    if (responseData.data && responseData.data.message) {\n                        // Standard format with nested data object\n                        console.log('Using standard format with nested data object');\n                        formattedData = responseData.data;\n                    } else if (responseData.message) {\n                        // Direct format without nested data (new format from real agents)\n                        console.log('Using direct format without nested data');\n                        // Clean the message if it contains JSON structure\n                        if (typeof responseData.message === 'string' && (responseData.message.includes(\"message':\") || responseData.message.includes('\"message\":') || responseData.message.includes(\"'agent_type':\"))) {\n                            console.log('Detected JSON in message string, extracting content...');\n                            try {\n                                // Try to extract just the message content from the JSON string\n                                const match = responseData.message.match(/message['\"]?\\s*:\\s*['\"]([^'\"]+)['\"]/);\n                                if (match && match[1]) {\n                                    responseData.message = match[1];\n                                }\n                            } catch (jsonError) {\n                                console.log('Error parsing JSON in message, using as is');\n                            }\n                        }\n                        formattedData = responseData;\n                    } else {\n                        console.error('Invalid response format:', responseData);\n                        throw new Error('Invalid response format from backend');\n                    }\n                    // Ensure the response has all required fields\n                    if (!formattedData.message) {\n                        formattedData.message = \"The server returned a response without a message.\";\n                    }\n                    if (!formattedData.agent_type) {\n                        formattedData.agent_type = \"fallback\";\n                    }\n                    if (!formattedData.phase) {\n                        formattedData.phase = phase;\n                    }\n                    // Clean any remaining \"Real Agent [GPT]:\" prefixes that might have gotten through\n                    if (typeof formattedData.message === 'string') {\n                        // Remove any prefixes like \"Real Agent [GPT]:\" - make this more aggressive\n                        formattedData.message = formattedData.message.replace(/^.*?Real Agent(?:\\s*\\[GPT\\])?:\\s*/i, '');\n                        // First clean any CONTEXT blocks\n                        if (formattedData.message.includes('CONTEXT:')) {\n                            console.log('Detected CONTEXT in message, cleaning...');\n                            const parts = formattedData.message.split('CONTEXT:');\n                            if (parts.length > 1) {\n                                // Take the last part after all CONTEXT blocks\n                                formattedData.message = parts[parts.length - 1].trim();\n                            }\n                        }\n                        // Handle TASK blocks\n                        if (formattedData.message.includes('TASK:')) {\n                            console.log('Detected TASK in message, cleaning...');\n                            const parts = formattedData.message.split('TASK:');\n                            if (parts.length > 1) {\n                                // Look for content after instructions (usually after a !, . or ?)\n                                const taskContent = parts[parts.length - 1];\n                                const match = taskContent.match(/[\\.!\\?]\\s*([^]*?)$/);\n                                if (match && match[1]) {\n                                    formattedData.message = match[1].trim();\n                                } else {\n                                    // If no clear ending found, just take everything after TASK\n                                    formattedData.message = taskContent.trim();\n                                }\n                            }\n                        }\n                        // Handle conversation stage instructions\n                        if (formattedData.message.includes('CONVERSATION STAGE:') || formattedData.message.includes('CURRENT CONVERSATION STAGE:') || formattedData.message.includes('NEXT STAGE:')) {\n                            console.log('Detected conversation stage instructions, cleaning more aggressively...');\n                            // Try to find the actual response after all instructions\n                            const match = formattedData.message.match(/Begin with a natural response without any introductory phrases\\.\\s*([^]*?)$/);\n                            if (match && match[1]) {\n                                formattedData.message = match[1].trim();\n                            } else {\n                                // Look for content after the last period, exclamation or question mark\n                                const match2 = formattedData.message.match(/[\\.!\\?]\\s*([^]*?)$/);\n                                if (match2 && match2[1]) {\n                                    formattedData.message = match2[1].trim();\n                                }\n                            }\n                        }\n                        // Final cleanup for any non-alphanumeric prefixes\n                        formattedData.message = formattedData.message.replace(/^[^a-zA-Z0-9]+/, '');\n                        console.log('Cleaned message:', formattedData.message);\n                    }\n                    // For intro phase, ensure we have next_intro_stage when needed\n                    if (phase === 'intro' && !formattedData.next_intro_stage) {\n                        const componentToStageMap = {\n                            'welcome': 'name',\n                            'name': 'major',\n                            'major': 'challenging_course',\n                            'challenging_course': 'motivation',\n                            'motivation': 'srl_ability',\n                            'srl_ability': 'complete'\n                        };\n                        // Use the component to determine the next stage\n                        if (component && componentToStageMap[component]) {\n                            console.log(`Adding next_intro_stage: ${componentToStageMap[component]}`);\n                            formattedData.next_intro_stage = componentToStageMap[component];\n                        }\n                    }\n                    console.log('Final formatted data:', JSON.stringify(formattedData));\n                } catch (jsonError) {\n                    console.error(`Error parsing response JSON: ${jsonError}`);\n                    throw new Error('Invalid JSON response from backend');\n                }\n                // Store the conversation history in Supabase if available\n                try {\n                    if (supabase && conversationId) {\n                        await supabase.from('conversations').upsert({\n                            conversation_id: conversationId,\n                            user_id: userId,\n                            phase: phase,\n                            component: component || 'general',\n                            updated_at: new Date().toISOString(),\n                            messages: [\n                                ...await getExistingMessages(conversationId) || [],\n                                {\n                                    role: 'user',\n                                    content: message,\n                                    timestamp: new Date().toISOString()\n                                },\n                                {\n                                    role: 'assistant',\n                                    content: formattedData.message,\n                                    timestamp: new Date().toISOString()\n                                }\n                            ]\n                        }, {\n                            onConflict: 'conversation_id'\n                        });\n                        console.log('Saved conversation to database');\n                    }\n                } catch (dbError) {\n                    console.error('Error saving conversation to database:', dbError);\n                // Continue even if database operation fails\n                }\n                // Format the response data for the frontend\n                const formattedResponse = {\n                    success: true,\n                    data: {\n                        message: typeof formattedData.message === 'string' ? formattedData.message : typeof formattedData.message === 'object' && formattedData.message?.message ? formattedData.message.message : JSON.stringify(formattedData.message),\n                        agent_type: formattedData.agent_type || \"ai_assistant\",\n                        phase: formattedData.phase || phase,\n                        component: formattedData.component || component,\n                        scaffolding_level: formattedData.scaffolding_level || 2,\n                        next_component: formattedData.next_component,\n                        next_phase: formattedData.next_phase,\n                        next_intro_stage: formattedData.next_intro_stage,\n                        timestamp: new Date().toISOString()\n                    }\n                };\n                console.log('Formatted response for frontend:', JSON.stringify(formattedResponse, null, 2));\n                // Return the formatted response with consistent structure\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(formattedResponse);\n            } catch (error) {\n                console.error(`Backend fetch error:`, error);\n                console.log('Connection refused - backend may not be running');\n                // Default to a simplified fallback response when the backend is unavailable\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    data: {\n                        message: \"I'm sorry, but I'm unable to connect to the backend service right now. Please ensure the backend server is running.\",\n                        phase: phase,\n                        component: component,\n                        agent_type: \"fallback\",\n                        scaffolding_level: 2,\n                        timestamp: new Date().toISOString()\n                    }\n                });\n            }\n        } catch (error) {\n            console.error('Error in chat API:', error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                data: {\n                    message: \"I couldn't process that request properly. Let's try again or take a different approach.\",\n                    agent_type: \"error\",\n                    phase: \"unknown\",\n                    component: null,\n                    scaffolding_level: 2,\n                    timestamp: new Date().toISOString()\n                }\n            });\n        }\n    } catch (error) {\n        console.error('Error in chat API:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: {\n                message: \"I couldn't process that request properly. Let's try again or take a different approach.\",\n                agent_type: \"error\",\n                phase: \"unknown\",\n                component: null,\n                scaffolding_level: 2,\n                timestamp: new Date().toISOString()\n            }\n        });\n    }\n}\n// Helper function to get existing messages for a conversation\nasync function getExistingMessages(conversationId) {\n    try {\n        const { data, error } = await supabase.from('conversations').select('messages').eq('conversation_id', conversationId).single();\n        if (error) {\n            return [];\n        }\n        return data?.messages || [];\n    } catch (error) {\n        console.error('Error fetching messages:', error);\n        return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/chat/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fsirui%2FDesktop%2Fmybot%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsirui%2FDesktop%2Fmybot&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();